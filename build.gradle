plugins {
    id 'java'
    id 'jacoco'
}

group 'global.goit.edu.romashko'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

test {
    // Enable Junit 5
    useJUnitPlatform()

    // Report is always generated after tests run
    finalizedBy jacocoTestReport

    // Show test results
    testLogging {
        events "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    doLast {
        def report = file("${jacoco.reportsDir}/test/jacocoTestReport.xml")
        printCoverage(report)
    }
}

def printCoverage(File xml) {
    if (!xml.exists()) return

    def parser = new XmlParser()
    parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false)
    parser.setFeature("http://apache.org/xml/features/disallow-doctype-decl", false)
    def results = parser.parse(xml)

    def percentage = {
        def covered = it.'@covered' as Double
        def missed = it.'@missed' as Double
        ((covered / (covered + missed)) * 100).round(2)
    }

    def counters = results.counter
    def metrics = [
            'instruction': percentage(counters.find { (it.'@type' == 'INSTRUCTION') }),
            'branch'     : percentage(counters.find { (it.'@type' == 'BRANCH') }),
            'line'       : percentage(counters.find { (it.'@type' == 'LINE') }),
            'complexity' : percentage(counters.find { (it.'@type' == 'COMPLEXITY') }),
            'method'     : percentage(counters.find { (it.'@type' == 'METHOD') }),
            'class'      : percentage(counters.find { (it.'@type' == 'CLASS') })
    ]

    logger.quiet("----- Code Coverage ----------")
    metrics.each { key, value -> logger.quiet(sprintf(" - %-11s: %6.2f%%", key, value)) }
    logger.quiet("------------------------------")
}